import os
import time
import json
import logging
from typing import Dict


def ensure_cache_dir(cache_dir: str = "cache"):
    if not os.path.exists(cache_dir):
        try:
            os.makedirs(cache_dir)
            logging.info(f"Created cache directory at '{cache_dir}'.")
        except Exception as e:
            logging.error(f"Failed to create cache directory '{cache_dir}': {e}")


def is_cache_valid(cache_file: str, cache_duration: int = 600) -> bool:
    if os.path.exists(cache_file):
        cache_mtime = os.path.getmtime(cache_file)
        current_time = time.time()
        if (current_time - cache_mtime) < cache_duration:
            logging.info(f"Cache file '{cache_file}' is valid.")
            return True
        else:
            logging.info(f"Cache file '{cache_file}' is expired.")
    else:
        logging.info(f"Cache file '{cache_file}' does not exist.")
    return False


def load_cache(cache_file: str) -> Dict:
    try:
        with open(cache_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
            logging.info("Loaded CISA KEV catalog from cache.")
            return data
    except Exception as e:
        logging.error(f"Error reading cache file '{cache_file}': {e}")
        return {}


def update_cache(cache_file: str, data: Dict):
    try:
        with open(cache_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=4)
            logging.info(f"Cache file '{cache_file}' updated.")
    except Exception as e:
        logging.error(f"Error updating cache file '{cache_file}': {e}")
